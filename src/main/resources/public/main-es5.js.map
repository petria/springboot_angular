{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/book-detail/book-detail.component.ts","webpack:///src/app/book-detail/book-detail.component.html","webpack:///src/app/book.service.ts","webpack:///src/app/books/books.component.ts","webpack:///src/app/books/books.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","BookDetailComponent","bookService","booksComponent","book","subscribe","doRefresh","updateBook","saveNewBook","updateBookList","console","log","getBooks","BookService","http","messageService","booksUrl","httpOptions","headers","get","pipe","_","handleError","put","post","operation","result","error","message","add","providedIn","BooksComponent","selectedBook","books","MessageService","messages","push","MessagesComponent","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,YAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AAAI;;AAAS;;AACb;;AACA;;AAAI;;AACJ;;AACA;;;;AAJI;;AAAA;;;;;;;;;sEDOSA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBALJ,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,CAKI;;;;0HAGFA,S,EAAS;AAAA,uBAblB,2DAakB,EAZlB,qEAYkB,EAXlB,sFAWkB,EAVlB,8EAUkB;AAVD,kBAGjB,uEAHiB,EAIjB,qEAJiB,EAKjB,0DALiB;AAUC,O;AALP,K;;;;;sEAKFA,S,EAAS;cAfrB,sDAeqB;eAfZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,sFAHY,EAIZ,8EAJY,CADN;AAORC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,CAPD;AAYRC,mBAAS,EAAE,EAZH;AAaRC,mBAAS,EAAE,CAAC,2DAAD;AAbH,S;AAeY,Q;;;sEAZlB,qE,EAAc,2jEADd,2DACc,EAAd,qEAAc,EACd,sFADc,EAEd,8EAFc,C,EAEG,6xB;;;;;;;;;;;;;;;;;ACfrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAI;;;;AAAkC;;AACtC;;AAAK;;AAAM;;AAAI;;AAAO;;AAAW;;AACjC;;AACE;;AAAO;;AACL;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACA;;AAAO;;AACL;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACA;;AAAO;;AACL;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AAAiE;;AACnE;;AAEA;;AAAI;;AAEJ;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAQ;;AACpC;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAAI;;AAC7B;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAM;;AAEnC;;AAEF;;;;;;AAvBM;;AAAA;;AACkB;;AAAA;;AAGX;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;QDHAC,mB;AAIX,mCAAoBC,WAApB,EAAsDC,cAAtD,EAAuF;AAAA;;AAAnE,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,cAAA,GAAAA,cAAA;AAAoC;;;;mCAElF,CACP;;;kCAEK;AAAA;;AACJ,eAAKD,WAAL,WAAwB,KAAKE,IAA7B,EACGC,SADH,CACc,UAAAD,IAAI;AAAA,mBAAI,KAAI,CAACE,SAAL,CAAe,IAAf,EAAqB,IAArB,CAAJ;AAAA,WADlB;AAED;;;+BAEG;AAAA;;AACF,eAAKJ,WAAL,CAAiBK,UAAjB,CAA4B,KAAKH,IAAjC,EACGC,SADH,CACc,UAAAD,IAAI;AAAA,mBAAI,MAAI,CAACE,SAAL,CAAeF,IAAf,EAAqB,KAArB,CAAJ;AAAA,WADlB;AAED;;;kCAES;AAAA;;AACR,eAAKF,WAAL,CAAiBM,WAAjB,CAA6B,KAAKJ,IAAlC,EACGC,SADH,CACa,UAAAD,IAAI;AAAA,mBAAI,MAAI,CAACE,SAAL,CAAeF,IAAf,EAAqB,IAArB,CAAJ;AAAA,WADjB;AAED;;;kCAEiBA,I,EAAaK,c,EAA0B;AACvDC,iBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,IAAzB;AACA,eAAKA,IAAL,GAAYA,IAAZ;;AACA,cAAIK,cAAJ,EAAoB;AAClB,iBAAKN,cAAL,CAAoBS,QAApB;AACD;AACF;;;;;;;uBA9BUX,mB,EAAmB,0H,EAAA,sI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,2N;AAAA;AAAA;ACVhC;;;;AAAK;;;;;;;;;;sEDUQA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTR,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;gBAE7B;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYakB,W;AAQX,2BAAoBC,IAApB,EAA8CC,cAA9C,EAA8E;AAAA;;AAA1D,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,cAAA,GAAAA,cAAA;AANtC,aAAAC,QAAA,GAAW,iCAAX;AAER,aAAAC,WAAA,GAAc;AACZC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,4BAAgB;AAAlB,WAAhB;AADG,SAAd;AAIiF;;;;mCAEzE;AAAA;;AACN;AACA,iBAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAsB,KAAKH,QAA3B,EACJI,IADI,CAEH,2DAAI,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACV,GAAL,CAAS,eAAT,CAAJ;AAAA,WAAL,CAFG,EAGH,kEAAW,KAAKW,WAAL,CAAyB,UAAzB,EAAqC,EAArC,CAAX,CAHG,CAAP;AAKD;;;mCAEUlB,I,EAAU;AAAA;;AACnB,iBAAO,KAAKU,IAAL,CAAUS,GAAV,CAAc,KAAKP,QAAnB,EAA6BZ,IAA7B,EAAmC,KAAKa,WAAxC,EAAqDG,IAArD,CACL,2DAAI,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACV,GAAL,2BAA4BP,IAAI,CAACd,EAAjC,EAAJ;AAAA,WAAL,CADK,EAEL,kEAAW,KAAKgC,WAAL,CAAsB,YAAtB,CAAX,CAFK,CAAP;AAID;;;oCAEWlB,I,EAAU;AAAA;;AACpB,iBAAO,KAAKU,IAAL,CAAUU,IAAV,CAAe,KAAKR,QAApB,EAA8BZ,IAA9B,EAAoC,KAAKa,WAAzC,EAAsDG,IAAtD,CACL,2DAAI,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACV,GAAL,iBAAJ;AAAA,WAAL,CADK,EAEL,kEAAW,KAAKW,WAAL,CAAsB,aAAtB,CAAX,CAFK,CAAP;AAID;;;gCAEMlB,I,EAAY;AAAA;;AACjB,iBAAO,KAAKU,IAAL,WAAiB,KAAKE,QAAL,GAAgB,GAAhB,GAAsBZ,IAAI,CAACd,EAA5C,EAAgD8B,IAAhD,CACL,2DAAI,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACV,GAAL,eAAJ;AAAA,WAAL,CADK,EAEL,kEAAW,KAAKW,WAAL,CAAsB,YAAtB,CAAX,CAFK,CAAP;AAID;;;sCAE2D;AAAA;;AAAA,cAArCG,SAAqC,uEAAzB,WAAyB;AAAA,cAAZC,MAAY;AAC1D,iBAAO,UAACC,KAAD,EAA+B;AAEpC;AACAjB,mBAAO,CAACiB,KAAR,CAAcA,KAAd,EAHoC,CAGd;AAEtB;;AACA,kBAAI,CAAChB,GAAL,WAAYc,SAAZ,sBAAiCE,KAAK,CAACC,OAAvC,GANoC,CAQpC;;;AACA,mBAAO,gDAAGF,MAAH,CAAP;AACD,WAVD;AAWD;;;4BAEUE,O,EAAiB;AAC1B,eAAKb,cAAL,CAAoBc,GAApB,wBAAwCD,OAAxC;AACD;;;;;;;uBAxDUf,W,EAAW,uH,EAAA,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACViB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACKU;;AAEI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAoB;;AAAW;;AAAO;;AACxC;;;;;;;;AAHI;;AAEkB;;AAAA;;AAAkB;;AAAA;;;;QDCrCC,c;AAKX,8BAAoB7B,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEzC;AACN,eAAKU,QAAL;AACD;;;iCAEQR,I,EAAU;AACjB,eAAK4B,YAAL,GAAoB5B,IAApB;AACD;;;mCAEc;AAAA;;AACb,eAAKF,WAAL,CAAiBU,QAAjB,GAA4BP,SAA5B,CAAsC,UAAA4B,KAAK;AAAA,mBAAI,MAAI,CAACA,KAAL,GAAaA,KAAjB;AAAA,WAA3C;AACD;;;;;;;uBAjBUF,c,EAAc,0H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,2J;AAAA;AAAA;ACT3B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;;;AAdc;;AAAA;;AAUW;;AAAA;;;;;;;;sEDNZA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTtC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKauC,c;AAHb;AAAA;;AAIE,aAAAC,QAAA,GAAqB,EAArB;AASD;;;;4BAPKP,O,EAAiB;AACnB,eAAKO,QAAL,CAAcC,IAAd,CAAmBR,OAAnB;AACD;;;gCAEO;AACN,eAAKO,QAAL,GAAgB,EAAhB;AACD;;;;;;;uBATUD,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVJ,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKE;;AAAsD;;AAAY;;;;;;AAAZ;;AAAA;;;;;;;;AALxD;;AAEE;;AAAI;;AAAQ;;AACZ;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,OAAAf,cAAA,QAAT;AAA+B,SAA/B;;AAAiC;;AAAK;;AAC9C;;AAEF;;;;;;AAFO;;AAAA;;;;QDGMsB,iB;AAEX,iCAAmBtB,cAAnB,EAAmD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAAkC;;;;mCAE7C,CACP;;;;;;;uBALUsB,iB,EAAiB,gI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,8E;AAAA;AAAA;ACR9B;;;;AAAK;;;;;;;;;sEDQQA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT5C,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2C,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI/B,OAAO,CAACiB,KAAR,CAAcc,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Books demo';\n}\n","<h1>{{title}}</h1>\n<app-books></app-books>\n<br><br>\n<hr>\n<app-messages></app-messages>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BooksComponent } from './books/books.component';\nimport { FormsModule } from '@angular/forms';\nimport { BookDetailComponent } from './book-detail/book-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BooksComponent,\n    BookDetailComponent,\n    MessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Book } from '../book';\nimport { BookService } from '../book.service';\nimport { BooksComponent } from \"../books/books.component\";\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n  @Input() book: Book;\n\n  constructor(private bookService: BookService, private booksComponent : BooksComponent) { }\n\n  ngOnInit(): void {\n  }\n\n  delete(): void {\n    this.bookService.delete(this.book)\n      .subscribe( book => this.doRefresh(null, true));\n  }\n\n  save(): void {\n    this.bookService.updateBook(this.book)\n      .subscribe( book => this.doRefresh(book, false));\n  }\n\n  saveNew() {\n    this.bookService.saveNewBook(this.book)\n      .subscribe(book => this.doRefresh(book, true));\n  }\n\n  private doRefresh(book : Book, updateBookList : boolean) {\n    console.log('refresh: ', book);\n    this.book = book;\n    if (updateBookList) {\n      this.booksComponent.getBooks();\n    }\n  }\n\n}\n","<div *ngIf=\"book\">\n  <h2>{{book.title | uppercase}} Details</h2>\n  <div><span>id: </span>{{book.id}}</div>\n  <div>\n    <label>Title:\n      <input [(ngModel)]=\"book.title\" placeholder=\"title\"/>\n    </label>\n    <br>\n    <label>Author:\n      <input [(ngModel)]=\"book.author\" placeholder=\"author\"/>\n    </label>\n    <br>\n    <label>Description:\n      <input [(ngModel)]=\"book.description\" placeholder=\"description\"/><br>\n    </label>\n\n    <br><br>\n\n    <button (click)=\"saveNew()\">save new</button>\n    <button (click)=\"save()\">save</button>\n    <button (click)=\"delete()\">delete</button>\n\n  </div>\n\n</div>\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\n\nimport {MessageService} from './message.service';\nimport {Book} from './book';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  private booksUrl = 'http://localhost:8080/api/books';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  getBooks(): Observable<Book[]> {\n    //return of(BOOKS);\n    return this.http.get<Book[]>(this.booksUrl)\n      .pipe(\n        tap(_ => this.log('fetched books')),\n        catchError(this.handleError<Book[]>('getBooks', []))\n      );\n  }\n\n  updateBook(book: Book): Observable<any> {\n    return this.http.put(this.booksUrl, book, this.httpOptions).pipe(\n      tap(_ => this.log(`updated book id=${book.id}`)),\n      catchError(this.handleError<any>('updateBook'))\n    );\n  }\n\n  saveNewBook(book: Book): Observable<any> {\n    return this.http.post(this.booksUrl, book, this.httpOptions).pipe(\n      tap(_ => this.log(`save new book`)),\n      catchError(this.handleError<any>('saveNewBook'))\n    );\n  }\n\n  delete(book: Book) {\n    return this.http.delete(this.booksUrl + '/' + book.id).pipe(\n      tap(_ => this.log(`delete book`)),\n      catchError(this.handleError<any>('deleteBook'))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  public log(message: string) {\n    this.messageService.add(`BookService: ${message}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../book';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  selectedBook: Book;\n  books: Book[];\n\n  constructor(private bookService: BookService) { }\n\n  ngOnInit(): void {\n    this.getBooks();\n  }\n\n  onSelect(book: Book): void {\n    this.selectedBook = book;\n  }\n\n  public getBooks(): void {\n    this.bookService.getBooks().subscribe(books => this.books = books);\n  }\n\n}\n","<table>\n  <tr>\n    <td>\n      <div class=\"left_pane\">\n        <ul class=\"books\">\n          <li *ngFor=\"let book of books\"\n              [class.selected]=\"book === selectedBook\"\n              (click)=\"onSelect(book)\">\n            <span class=\"badge\">{{book.id}}</span>{{book.title}}\n          </li>\n        </ul>\n      </div>\n    </td>\n    <td>\n      <div class=\"right_pane\">\n        <app-book-detail [book]=\"selectedBook\"></app-book-detail>\n      </div>\n    </td>\n  </tr>\n</table>\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}